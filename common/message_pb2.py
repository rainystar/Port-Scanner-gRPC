# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/message.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='common/message.proto',
  package='',
  serialized_pb=_b('\n\x14\x63ommon/message.proto\"h\n\x04Node\x12\n\n\x02id\x18\x01 \x01(\x05\x12\n\n\x02ip\x18\x02 \x01(\t\x12\x0c\n\x04port\x18\x03 \x01(\x05\x12\x15\n\rrunning_units\x18\x04 \x01(\x05\x12\x13\n\x0bupdate_time\x18\x05 \x01(\t\x12\x0e\n\x06status\x18\x06 \x01(\t\".\n\x06Result\x12\x0b\n\x03res\x18\x01 \x01(\x08\x12\n\n\x02id\x18\x02 \x01(\x05\x12\x0b\n\x03msg\x18\x03 \x01(\t\"&\n\nResultList\x12\x18\n\x07results\x18\x01 \x03(\x0b\x32\x07.Result\"\xc9\x01\n\x03Job\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0f\n\x07task_id\x18\x02 \x01(\x05\x12\x12\n\nscanner_id\x18\x03 \x01(\x05\x12\x0c\n\x04type\x18\x04 \x01(\t\x12\n\n\x02ip\x18\x05 \x01(\t\x12\x0e\n\x06ip_end\x18\x06 \x01(\t\x12\x12\n\nport_begin\x18\x07 \x01(\x05\x12\x10\n\x08port_end\x18\x08 \x01(\x05\x12\x0b\n\x03num\x18\t \x01(\x05\x12\x0f\n\x07seq_ran\x18\n \x01(\t\x12\x13\n\x0b\x66inish_time\x18\x0b \x01(\t\x12\x0e\n\x06status\x18\x0c \x01(\t\"\x1d\n\x07JobList\x12\x12\n\x04jobs\x18\x01 \x03(\x0b\x32\x04.Job\"C\n\nReportItem\x12\n\n\x02ip\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\x0b\n\x03res\x18\x03 \x01(\t\x12\x0e\n\x06\x62\x61nner\x18\x04 \x01(\t\"i\n\x06Report\x12\x0e\n\x06job_id\x18\x01 \x01(\x05\x12\x0f\n\x07task_id\x18\x02 \x01(\x05\x12\x12\n\nscanner_id\x18\x03 \x01(\x05\x12\x0c\n\x04type\x18\x04 \x01(\t\x12\x1c\n\x07reports\x18\x05 \x03(\x0b\x32\x0b.ReportItem2u\n\rControllerRPC\x12#\n\x0fRegisterScanner\x12\x05.Node\x1a\x07.Result\"\x00\x12\x1d\n\tHeartbeat\x12\x05.Node\x1a\x07.Result\"\x00\x12 \n\nSendReport\x12\x07.Report\x1a\x07.Result\"\x00\x32\x85\x01\n\nScannerRPC\x12\'\n\x13\x43onfirmAliveScanner\x12\x05.Node\x1a\x07.Result\"\x00\x12\"\n\x0bSendJobList\x12\x08.JobList\x1a\x07.Result\"\x00\x12*\n\x0f\x43heckRunningJob\x12\x08.JobList\x1a\x0b.ResultList\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_NODE = _descriptor.Descriptor(
  name='Node',
  full_name='Node',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Node.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ip', full_name='Node.ip', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port', full_name='Node.port', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='running_units', full_name='Node.running_units', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='update_time', full_name='Node.update_time', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='Node.status', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=128,
)


_RESULT = _descriptor.Descriptor(
  name='Result',
  full_name='Result',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='res', full_name='Result.res', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='Result.id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='msg', full_name='Result.msg', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=130,
  serialized_end=176,
)


_RESULTLIST = _descriptor.Descriptor(
  name='ResultList',
  full_name='ResultList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='results', full_name='ResultList.results', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=178,
  serialized_end=216,
)


_JOB = _descriptor.Descriptor(
  name='Job',
  full_name='Job',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Job.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task_id', full_name='Job.task_id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scanner_id', full_name='Job.scanner_id', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='Job.type', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ip', full_name='Job.ip', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ip_end', full_name='Job.ip_end', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port_begin', full_name='Job.port_begin', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port_end', full_name='Job.port_end', index=7,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num', full_name='Job.num', index=8,
      number=9, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='seq_ran', full_name='Job.seq_ran', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='finish_time', full_name='Job.finish_time', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='Job.status', index=11,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=219,
  serialized_end=420,
)


_JOBLIST = _descriptor.Descriptor(
  name='JobList',
  full_name='JobList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='jobs', full_name='JobList.jobs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=422,
  serialized_end=451,
)


_REPORTITEM = _descriptor.Descriptor(
  name='ReportItem',
  full_name='ReportItem',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip', full_name='ReportItem.ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port', full_name='ReportItem.port', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='res', full_name='ReportItem.res', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='banner', full_name='ReportItem.banner', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=453,
  serialized_end=520,
)


_REPORT = _descriptor.Descriptor(
  name='Report',
  full_name='Report',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='job_id', full_name='Report.job_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task_id', full_name='Report.task_id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='scanner_id', full_name='Report.scanner_id', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='Report.type', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='reports', full_name='Report.reports', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=522,
  serialized_end=627,
)

_RESULTLIST.fields_by_name['results'].message_type = _RESULT
_JOBLIST.fields_by_name['jobs'].message_type = _JOB
_REPORT.fields_by_name['reports'].message_type = _REPORTITEM
DESCRIPTOR.message_types_by_name['Node'] = _NODE
DESCRIPTOR.message_types_by_name['Result'] = _RESULT
DESCRIPTOR.message_types_by_name['ResultList'] = _RESULTLIST
DESCRIPTOR.message_types_by_name['Job'] = _JOB
DESCRIPTOR.message_types_by_name['JobList'] = _JOBLIST
DESCRIPTOR.message_types_by_name['ReportItem'] = _REPORTITEM
DESCRIPTOR.message_types_by_name['Report'] = _REPORT

Node = _reflection.GeneratedProtocolMessageType('Node', (_message.Message,), dict(
  DESCRIPTOR = _NODE,
  __module__ = 'common.message_pb2'
  # @@protoc_insertion_point(class_scope:Node)
  ))
_sym_db.RegisterMessage(Node)

Result = _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), dict(
  DESCRIPTOR = _RESULT,
  __module__ = 'common.message_pb2'
  # @@protoc_insertion_point(class_scope:Result)
  ))
_sym_db.RegisterMessage(Result)

ResultList = _reflection.GeneratedProtocolMessageType('ResultList', (_message.Message,), dict(
  DESCRIPTOR = _RESULTLIST,
  __module__ = 'common.message_pb2'
  # @@protoc_insertion_point(class_scope:ResultList)
  ))
_sym_db.RegisterMessage(ResultList)

Job = _reflection.GeneratedProtocolMessageType('Job', (_message.Message,), dict(
  DESCRIPTOR = _JOB,
  __module__ = 'common.message_pb2'
  # @@protoc_insertion_point(class_scope:Job)
  ))
_sym_db.RegisterMessage(Job)

JobList = _reflection.GeneratedProtocolMessageType('JobList', (_message.Message,), dict(
  DESCRIPTOR = _JOBLIST,
  __module__ = 'common.message_pb2'
  # @@protoc_insertion_point(class_scope:JobList)
  ))
_sym_db.RegisterMessage(JobList)

ReportItem = _reflection.GeneratedProtocolMessageType('ReportItem', (_message.Message,), dict(
  DESCRIPTOR = _REPORTITEM,
  __module__ = 'common.message_pb2'
  # @@protoc_insertion_point(class_scope:ReportItem)
  ))
_sym_db.RegisterMessage(ReportItem)

Report = _reflection.GeneratedProtocolMessageType('Report', (_message.Message,), dict(
  DESCRIPTOR = _REPORT,
  __module__ = 'common.message_pb2'
  # @@protoc_insertion_point(class_scope:Report)
  ))
_sym_db.RegisterMessage(Report)


import abc
from grpc.early_adopter import implementations
from grpc.early_adopter import utilities
class EarlyAdopterControllerRPCServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def RegisterScanner(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def Heartbeat(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SendReport(self, request, context):
    raise NotImplementedError()
class EarlyAdopterControllerRPCServer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def start(self):
    raise NotImplementedError()
  @abc.abstractmethod
  def stop(self):
    raise NotImplementedError()
class EarlyAdopterControllerRPCStub(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def RegisterScanner(self, request):
    raise NotImplementedError()
  RegisterScanner.async = None
  @abc.abstractmethod
  def Heartbeat(self, request):
    raise NotImplementedError()
  Heartbeat.async = None
  @abc.abstractmethod
  def SendReport(self, request):
    raise NotImplementedError()
  SendReport.async = None
def early_adopter_create_ControllerRPC_server(servicer, port, root_certificates, key_chain_pairs):
  import common.message_pb2
  import common.message_pb2
  import common.message_pb2
  import common.message_pb2
  import common.message_pb2
  import common.message_pb2
  method_service_descriptions = {
    "Heartbeat": utilities.unary_unary_service_description(
      servicer.Heartbeat,
      common.message_pb2.Node.FromString,
      common.message_pb2.Result.SerializeToString,
    ),
    "RegisterScanner": utilities.unary_unary_service_description(
      servicer.RegisterScanner,
      common.message_pb2.Node.FromString,
      common.message_pb2.Result.SerializeToString,
    ),
    "SendReport": utilities.unary_unary_service_description(
      servicer.SendReport,
      common.message_pb2.Report.FromString,
      common.message_pb2.Result.SerializeToString,
    ),
  }
  return implementations.secure_server(method_service_descriptions, port, root_certificates, key_chain_pairs)
def early_adopter_create_ControllerRPC_stub(host, port):
  import common.message_pb2
  import common.message_pb2
  import common.message_pb2
  import common.message_pb2
  import common.message_pb2
  import common.message_pb2
  method_invocation_descriptions = {
    "Heartbeat": utilities.unary_unary_invocation_description(
      common.message_pb2.Node.SerializeToString,
      common.message_pb2.Result.FromString,
    ),
    "RegisterScanner": utilities.unary_unary_invocation_description(
      common.message_pb2.Node.SerializeToString,
      common.message_pb2.Result.FromString,
    ),
    "SendReport": utilities.unary_unary_invocation_description(
      common.message_pb2.Report.SerializeToString,
      common.message_pb2.Result.FromString,
    ),
  }
  return implementations.insecure_stub(method_invocation_descriptions, host, port)
class EarlyAdopterScannerRPCServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def ConfirmAliveScanner(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SendJobList(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def CheckRunningJob(self, request, context):
    raise NotImplementedError()
class EarlyAdopterScannerRPCServer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def start(self):
    raise NotImplementedError()
  @abc.abstractmethod
  def stop(self):
    raise NotImplementedError()
class EarlyAdopterScannerRPCStub(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def ConfirmAliveScanner(self, request):
    raise NotImplementedError()
  ConfirmAliveScanner.async = None
  @abc.abstractmethod
  def SendJobList(self, request):
    raise NotImplementedError()
  SendJobList.async = None
  @abc.abstractmethod
  def CheckRunningJob(self, request):
    raise NotImplementedError()
  CheckRunningJob.async = None
def early_adopter_create_ScannerRPC_server(servicer, port, root_certificates, key_chain_pairs):
  import common.message_pb2
  import common.message_pb2
  import common.message_pb2
  import common.message_pb2
  import common.message_pb2
  import common.message_pb2
  method_service_descriptions = {
    "CheckRunningJob": utilities.unary_unary_service_description(
      servicer.CheckRunningJob,
      common.message_pb2.JobList.FromString,
      common.message_pb2.ResultList.SerializeToString,
    ),
    "ConfirmAliveScanner": utilities.unary_unary_service_description(
      servicer.ConfirmAliveScanner,
      common.message_pb2.Node.FromString,
      common.message_pb2.Result.SerializeToString,
    ),
    "SendJobList": utilities.unary_unary_service_description(
      servicer.SendJobList,
      common.message_pb2.JobList.FromString,
      common.message_pb2.Result.SerializeToString,
    ),
  }
  return implementations.secure_server(method_service_descriptions, port, root_certificates, key_chain_pairs)
def early_adopter_create_ScannerRPC_stub(host, port):
  import common.message_pb2
  import common.message_pb2
  import common.message_pb2
  import common.message_pb2
  import common.message_pb2
  import common.message_pb2
  method_invocation_descriptions = {
    "CheckRunningJob": utilities.unary_unary_invocation_description(
      common.message_pb2.JobList.SerializeToString,
      common.message_pb2.ResultList.FromString,
    ),
    "ConfirmAliveScanner": utilities.unary_unary_invocation_description(
      common.message_pb2.Node.SerializeToString,
      common.message_pb2.Result.FromString,
    ),
    "SendJobList": utilities.unary_unary_invocation_description(
      common.message_pb2.JobList.SerializeToString,
      common.message_pb2.Result.FromString,
    ),
  }
  return implementations.insecure_stub(method_invocation_descriptions, host, port)
# @@protoc_insertion_point(module_scope)
